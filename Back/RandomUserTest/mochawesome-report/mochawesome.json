{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2023-07-05T23:57:25.630Z",
    "end": "2023-07-05T23:57:26.560Z",
    "duration": 930,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "c19db92e-9acd-4d37-8bdc-837fffaf11ce",
      "title": "",
      "fullFile": "C:\\Users\\adool\\OneDrive\\Desktop\\Topcon Test\\Back\\RandomUserTest\\test\\api.test.js",
      "file": "\\test\\api.test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e2e13d9d-351f-4d9d-827c-7b2718793cb3",
          "title": "API Tests",
          "fullFile": "C:\\Users\\adool\\OneDrive\\Desktop\\Topcon Test\\Back\\RandomUserTest\\test\\api.test.js",
          "file": "\\test\\api.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should fetch a random user",
              "fullTitle": "API Tests should fetch a random user",
              "timedOut": false,
              "duration": 262,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const user = await fetchRandomUser();\nexpect(user).to.have.property('name');\nexpect(user).to.have.property('email');\nexpect(user).to.have.property('location');",
              "err": {},
              "uuid": "1ec0ff48-cf8a-4202-ab30-6002ff69f3f3",
              "parentUUID": "e2e13d9d-351f-4d9d-827c-7b2718793cb3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have a valid email address",
              "fullTitle": "API Tests should have a valid email address",
              "timedOut": false,
              "duration": 205,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const user = await fetchRandomUser();\nexpect(user.email).to.match(/^[\\w.-]+@[\\w.-]+\\.[a-zA-Z]{2,}$/);",
              "err": {},
              "uuid": "b2657711-88ce-4fcc-8499-b7ffec2d87c4",
              "parentUUID": "e2e13d9d-351f-4d9d-827c-7b2718793cb3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have a non-empty name",
              "fullTitle": "API Tests should have a non-empty name",
              "timedOut": false,
              "duration": 182,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const user = await fetchRandomUser();\nexpect(user.name).to.have.property('first').that.is.not.empty;\nexpect(user.name).to.have.property('last').that.is.not.empty;",
              "err": {},
              "uuid": "ee6fb602-0ef9-4fc5-9b49-dff538902e90",
              "parentUUID": "e2e13d9d-351f-4d9d-827c-7b2718793cb3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have a valid location",
              "fullTitle": "API Tests should have a valid location",
              "timedOut": false,
              "duration": 274,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const user = await fetchRandomUser();\nexpect(user.location).to.have.property('country').that.is.not.empty;\nexpect(user.location).to.have.property('city').that.is.not.empty;",
              "err": {},
              "uuid": "56a35e64-3399-417f-a6b1-42e2c224ee03",
              "parentUUID": "e2e13d9d-351f-4d9d-827c-7b2718793cb3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1ec0ff48-cf8a-4202-ab30-6002ff69f3f3",
            "b2657711-88ce-4fcc-8499-b7ffec2d87c4",
            "ee6fb602-0ef9-4fc5-9b49-dff538902e90",
            "56a35e64-3399-417f-a6b1-42e2c224ee03"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 923,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}